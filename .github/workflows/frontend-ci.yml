name: Frontend CI with CodeQL

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  schedule:
    - cron: '30 2 * * 0'

# Add permissions at the workflow level
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code from PR
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: |
        if npm run | grep -q " test "; then
          npm test -- --coverage --watchAll=false
        else
          echo "No test script found, skipping tests"
        fi

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code from PR
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        queries: security-and-quality
        
    - name: Autobuild JavaScript
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript"

  audit-dependencies:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code from PR
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Run comprehensive security audit
      run: npm audit --audit-level high
      
  notify:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan, audit-dependencies]
    if: always()
    
    steps:
    - name: Send email notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: "Frontend CI Results - ${{ github.repository }} - ${{ github.sha }}"
        body: |
          Frontend CI Pipeline completed!
          
          Repository: ${{ github.repository }}
          Commit: ${{ github.sha }}
          Branch: ${{ github.ref }}
          Workflow: ${{ github.workflow }}
          Status: ${{ job.status }}
          
          View details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          Jobs status:
          - Build & Test: ${{ needs.build-and-test.result }}
          - Security Scan: ${{ needs.security-scan.result }}
          - Dependency Audit: ${{ needs.audit-dependencies.result }}
          
          Triggered by: ${{ github.actor }}
        to: ${{ secrets.NOTIFICATION_EMAILS }}
        from: ${{ secrets.SMTP_USERNAME }}