name: Deploy CD - Build and Push Docker Images

on:
  push:
    branches: [main, develop]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check for relevant changes
      id: changes
      uses: dorny/paths-filter@v2
      with:
        base: ${{ github.base_ref }}
        filters:
          frontend:
            - 'frontend/**'
            - '.github/workflows/frontend-ci.yml'
          backend:
            - 'backend/**'
            - '.github/workflows/backend-ci.yml'
            - 'gradle/**'
            - 'build.gradle'
            - 'settings.gradle'
            - 'gradle.properties'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Frontend Docker image
      if: steps.changes.outputs.frontend == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: |
          zenzebz/frontend-app:${{ github.sha }}
          zenzebz/frontend-app:latest
          zenzebz/frontend-app:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Backend Docker image
      if: steps.changes.outputs.backend == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: |
          zenzebz/backend-app:${{ github.sha }}
          zenzebz/backend-app:latest
          zenzebz/backend-app:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Verify pushed images
      run: |
        echo "Docker images pushed successfully for SHA: ${{ github.sha }}"
        echo "Frontend changes: ${{ steps.changes.outputs.frontend }}"
        echo "Backend changes: ${{ steps.changes.outputs.backend }}"
        echo "Branch: ${{ github.ref_name }}"
        
    - name: Skip deployment notification
      if: steps.changes.outputs.frontend == 'false' && steps.changes.outputs.backend == 'false'
      run: |
        echo "No relevant frontend or backend changes detected. Skipping Docker image deployment."